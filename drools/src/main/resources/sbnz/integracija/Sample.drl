package sbnz.integracija;

import com.sbnz.adsys.utils.Constants;
import java.time.LocalDate;

import com.sbnz.adsys.model.Candidate;
import com.sbnz.adsys.model.AdvertisementRequest;
import com.sbnz.adsys.model.Advertisement


rule "Target Group Age" salience 10
lock-on-active
    when
        $req: AdvertisementRequest($min: minAge, $max: maxAge)
        $c : Candidate(user.age > $min, user.age < $max)
    then
        System.out.println("Candidate with name: " + $c.getUser().fullName() + " satisfies the age condition");
        modify ($c) {setAgeGroup(true)}
end


rule "Target Group Geography" salience 10
lock-on-active
    when
        $req: AdvertisementRequest($query: geographicLocation)
        $c: Candidate(user.fullLocation.contains($query))
    then
        System.out.println("Candidate with name: " + $c.getUser().fullName() + " satisfies the geography condition");
        modify ($c) {setGeographyGroup(true)}
end


rule "Is Target Group" salience 9
    when
        $c: Candidate(ageGroup && geographyGroup) @Watch(ageGroup, geographyGroup)
    then
        System.out.println("Candidate with name: " + $c.getUser().fullName() + " does belong to ad target group!");
        modify ($c) {setTargetGroup(true)}
end


rule "Is not Target Group" salience 9
    when
        $c: Candidate(!(ageGroup && geographyGroup))
    then
        System.out.println("Candidate with name: " + $c.getUser().fullName() + " does NOT belong to ad target group!");
end


rule "5+ ads ignored this month by the same company" salience 8
    when
        $req: AdvertisementRequest($currentAd: advertisement, $currentAdvertiser: advertisement.advertiser)
        $c: Candidate(targetGroup)  @Watch(targetGroup)
        Number(intValue >= 5) from accumulate(
            Advertisement(
                advertiser.name == $currentAdvertiser.name &&
                $currentAd.getDatePublished().isAfter(LocalDate.now().minusMonths(1))
            ) from $c.user.ignoredAdvertisements,
            count()
        )
    then
        System.out.println("Candidate: " + $c.getUser().fullName() + " has ignored 5+ ads by "
        + $currentAdvertiser.getName() + " and he's eliminated from the candidate pool!");
        modify ($c){setDisqualified(true)}
end


rule "5+ ads clicked on this month by the same company" salience 7
    when
        $req: AdvertisementRequest($currentAd: advertisement, $currentAdvertiser: advertisement.advertiser)
        $c: Candidate(targetGroup && !disqualified)
        Number(intValue >= 5) from accumulate(
            Advertisement(
                advertiser.name == $currentAdvertiser.name &&
                $currentAd.getDatePublished().isAfter(LocalDate.now().minusMonths(1))
            ) from $c.user.clickedAdvertisements,
            count()
        )
    then
        System.out.println("Candidate: " + $c.getUser().fullName() + " has clicked on 5+ ads by "
        + $currentAdvertiser.getName() + " and he will be automatically qualifed!");
        modify ($c) {setAutomaticallyQualified(true)}
end


rule "Is In Pool" salience 6
    when
        $c: Candidate(targetGroup && !disqualified && !automaticallyQualified)
    then
        System.out.println("Candidate with name: " + $c.getUser().fullName() + " still in the pool");
end