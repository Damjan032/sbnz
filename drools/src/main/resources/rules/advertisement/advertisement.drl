package rules.advertisement;

import com.sbnz.adsys.model.*;
import com.sbnz.adsys.event.*;

global com.sbnz.adsys.service.SocialMediaUserService socialMediaUserService;


rule "Ad has been seen"
    when
       $adEvent : AdvertisementViewEvent($ad: advertisement, $user: socialMediaUser)
    then
        socialMediaUserService.adSeenByUser($ad, $user);
end


rule "Ad has been clicked within 1 min"
    when
       $adEvent : AdvertisementViewEvent($ad: advertisement, $user: socialMediaUser)
       $ace: AdvertisementClickEvent (advertisement.getId() == $ad.getId(),
        socialMediaUser.getUser().getId() == $user.getUser().getId(),
       this after[0s,1m] $adEvent )
    then
        delete($ace);
        delete($adEvent);
        socialMediaUserService.adClickedByUser($ad, $user);
end


rule "Ad has NOT been clicked for more than 1 min"
    when
       $adEvent : AdvertisementViewEvent($ad: advertisement, $user: socialMediaUser)
       not (AdvertisementClickEvent (advertisement.getId() == $ad.getId(),
        socialMediaUser.getUser().getId() == $user.getUser().getId(),
       this after[0s,1m] $adEvent ))
    then
        socialMediaUserService.adIgnoredByUser($ad, $user);
        delete($adEvent);

end

rule "Ad was clicked for more than 20 times in the last 2s"
    when
        $aie: AdvertisementClickEvent($ad: advertisement, $user: socialMediaUser)
        Number(intValue >= 20) from accumulate(
           $cavc: AdvertisementClickEvent(advertisement.getId() == $ad.getId(), socialMediaUser.getId() == $user.getId())
           over window:time(2s), count($cavc)
        )
    then
        delete($aie);
        socialMediaUserService.adIgnoredByUser($ad, $user);
end