package rules.login;
import com.sbnz.adsys.model.*;
import com.sbnz.adsys.event.*;


declare SuspiciousUserEvent
    @role(event)
    @expires(5m)
    user: User
    reason: String
end

rule "More than 3 logging in unsuccessfully in 1 minute from one user"
    when
        $loginEvent: LoginEvent($user: user, user != null);
        Number(intValue >= 3 ) from accumulate(
			$accumulateLoginEvent: LoginEvent(user.getId() == $user.getId(), success == false) over window:time(2m), count($accumulateLoginEvent)
		)
		not (SuspiciousUserEvent(user.getId() == $user.getId(), reason == "Many unsuccessful logging in from same email"))
    then
    	System.out.println("Many unsuccessful logging in from same username");
    	$user.setEnabled(false);
    	insert(new SuspiciousUserEvent($user, "Many unsuccessful logging in from same email"));
end

rule "Successful logging in"
    when
        $loginEvent: LoginEvent($user: user, user != null);
        Number(intValue < 3 ) from accumulate(
			$accumulateLoginEvent: LoginEvent(user.getId() == $user.getId(), success == false) over window:time(2m), count($accumulateLoginEvent)
		)
		not (SuspiciousUserEvent(user.id == $user.getId(), reason == "Many unsuccessful logging in from same email"))
    then
    	System.out.println("Successful logging in");
    	$user.setEnabled(true);
end